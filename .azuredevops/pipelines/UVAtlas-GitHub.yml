# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
#
# http://go.microsoft.com/fwlink/?LinkID=512686

# Builds the library for Windows Desktop.

schedules:
  - cron: "40 5 * * *"
    displayName: 'Nightly build'
    branches:
      include:
        - main

# GitHub Actions handles MSBuild for CI/PR
trigger: none
pr:
  branches:
    include:
      - main
  paths:
    include:
      - '.azuredevops/pipelines/UVAtlas-GitHub.yml'

resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main

name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

pool:
  vmImage: windows-2022

variables:
  - group: uvatlas-shared-variables
  - name: Codeql.Enabled
    value: false
  - name: GUID_FEED
    value: $(ADOFeedGUID)

jobs:
  - job: DESKTOP_BUILD
    displayName: 'Windows Desktop'
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 1
    strategy:
      maxParallel: 2
      matrix:
        Release_x64:
          BuildPlatform: x64
          BuildConfiguration: Release
          SpectreMitigation: false
        Debug_x64:
          BuildPlatform: x64
          BuildConfiguration: Debug
          SpectreMitigation: false
        Release_x86:
          BuildPlatform: x86
          BuildConfiguration: Release
          SpectreMitigation: false
        Debug_x86:
          BuildPlatform: x86
          BuildConfiguration: Debug
          SpectreMitigation: false
        # windows-2022 image is missing v142 spectre-mitigated libraries
    steps:
      - checkout: self
        clean: true
        fetchTags: false
      - task: NuGetToolInstaller@1
        displayName: 'Use NuGet'
      - task: NuGetAuthenticate@1
        displayName: 'NuGet Auth'
      - task: NuGetCommand@2
        displayName: NuGet restore
        inputs:
          solution: UVAtlas_2019_Win10.sln
          feedRestore: $(GUID_FEED)
          includeNuGetOrg: false
      - task: VSBuild@1
        displayName: Build solution UVAtlas_2019_Win10.sln
        inputs:
          solution: UVAtlas_2019_Win10.sln
          msbuildArgs: /p:PreferredToolArchitecture=x64 /p:SpectreMitigation=$(SpectreMitigation)
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
